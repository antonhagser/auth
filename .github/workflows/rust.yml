name: Rust

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    CARGO_TERM_COLOR: always

jobs:
    fmt:
        name: Format
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: true
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  components: rustfmt
                  override: true
            - uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Cargo Cache
              uses: actions/cache@v1
              with:
                  path: ~/.cargo
                  key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
                      ${{ runner.os }}-cargo

            - name: Cargo Target Cache
              uses: actions/cache@v1
              with:
                  path: target
                  key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
                      ${{ runner.os }}-cargo-target

            - name: Build AuthCore Prisma
              run: cargo prisma generate --schema=./database/AuthCore/prisma/schema.prisma
            - name: Build Platform Prisma
              run: cargo prisma generate --schema=./database/Platform/prisma/schema.prisma
            - name: Build
              run: cargo build --verbose --all-features
            - name: Run tests
              run: cargo test --verbose --all-features
